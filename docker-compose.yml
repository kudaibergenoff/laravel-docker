version: "3.9"

networks:
  laravel:

services:

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    container_name: nginx_service

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
      - ./:/var/www
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    container_name: php_service
    depends_on:
      - nginx

  postgres:
    image: postgres
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 12345ss
      POSTGRES_DB: laravel_db
    container_name: postgres_service

  composer:
    build:
      context: ./docker/composer
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: composer_service
    volumes:
      - ./:/var/www
    working_dir: /var/www
    depends_on:
      - php
    user: laravel
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]

  npm:
    image: node:latest
    container_name: npm_service
    volumes:
      - ./:/var/www
    ports:
      - "3000:3000"
      - "3001:3001"
    working_dir: /var/www
    entrypoint: [ 'npm' ]

  artisan:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - ./:/var/www:delegated
    container_name: artisan_service
    depends_on:
      - postgres
    working_dir: /var/www
    entrypoint: [ 'php', '/var/www/artisan' ]

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: unless-stopped
    container_name: redis_service